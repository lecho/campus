package lecho.app.campus.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import lecho.app.campus.dao.PlaceFaculty;
import lecho.app.campus.dao.PlaceCategory;
import lecho.app.campus.dao.PlaceUnit;
import lecho.app.campus.dao.Unit;
import lecho.app.campus.dao.Faculty;
import lecho.app.campus.dao.Category;
import lecho.app.campus.dao.Place;

import lecho.app.campus.dao.PlaceFacultyDao;
import lecho.app.campus.dao.PlaceCategoryDao;
import lecho.app.campus.dao.PlaceUnitDao;
import lecho.app.campus.dao.UnitDao;
import lecho.app.campus.dao.FacultyDao;
import lecho.app.campus.dao.CategoryDao;
import lecho.app.campus.dao.PlaceDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig placeFacultyDaoConfig;
    private final DaoConfig placeCategoryDaoConfig;
    private final DaoConfig placeUnitDaoConfig;
    private final DaoConfig unitDaoConfig;
    private final DaoConfig facultyDaoConfig;
    private final DaoConfig categoryDaoConfig;
    private final DaoConfig placeDaoConfig;

    private final PlaceFacultyDao placeFacultyDao;
    private final PlaceCategoryDao placeCategoryDao;
    private final PlaceUnitDao placeUnitDao;
    private final UnitDao unitDao;
    private final FacultyDao facultyDao;
    private final CategoryDao categoryDao;
    private final PlaceDao placeDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        placeFacultyDaoConfig = daoConfigMap.get(PlaceFacultyDao.class).clone();
        placeFacultyDaoConfig.initIdentityScope(type);

        placeCategoryDaoConfig = daoConfigMap.get(PlaceCategoryDao.class).clone();
        placeCategoryDaoConfig.initIdentityScope(type);

        placeUnitDaoConfig = daoConfigMap.get(PlaceUnitDao.class).clone();
        placeUnitDaoConfig.initIdentityScope(type);

        unitDaoConfig = daoConfigMap.get(UnitDao.class).clone();
        unitDaoConfig.initIdentityScope(type);

        facultyDaoConfig = daoConfigMap.get(FacultyDao.class).clone();
        facultyDaoConfig.initIdentityScope(type);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        placeDaoConfig = daoConfigMap.get(PlaceDao.class).clone();
        placeDaoConfig.initIdentityScope(type);

        placeFacultyDao = new PlaceFacultyDao(placeFacultyDaoConfig, this);
        placeCategoryDao = new PlaceCategoryDao(placeCategoryDaoConfig, this);
        placeUnitDao = new PlaceUnitDao(placeUnitDaoConfig, this);
        unitDao = new UnitDao(unitDaoConfig, this);
        facultyDao = new FacultyDao(facultyDaoConfig, this);
        categoryDao = new CategoryDao(categoryDaoConfig, this);
        placeDao = new PlaceDao(placeDaoConfig, this);

        registerDao(PlaceFaculty.class, placeFacultyDao);
        registerDao(PlaceCategory.class, placeCategoryDao);
        registerDao(PlaceUnit.class, placeUnitDao);
        registerDao(Unit.class, unitDao);
        registerDao(Faculty.class, facultyDao);
        registerDao(Category.class, categoryDao);
        registerDao(Place.class, placeDao);
    }
    
    public void clear() {
        placeFacultyDaoConfig.getIdentityScope().clear();
        placeCategoryDaoConfig.getIdentityScope().clear();
        placeUnitDaoConfig.getIdentityScope().clear();
        unitDaoConfig.getIdentityScope().clear();
        facultyDaoConfig.getIdentityScope().clear();
        categoryDaoConfig.getIdentityScope().clear();
        placeDaoConfig.getIdentityScope().clear();
    }

    public PlaceFacultyDao getPlaceFacultyDao() {
        return placeFacultyDao;
    }

    public PlaceCategoryDao getPlaceCategoryDao() {
        return placeCategoryDao;
    }

    public PlaceUnitDao getPlaceUnitDao() {
        return placeUnitDao;
    }

    public UnitDao getUnitDao() {
        return unitDao;
    }

    public FacultyDao getFacultyDao() {
        return facultyDao;
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public PlaceDao getPlaceDao() {
        return placeDao;
    }

}
